from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from utils.events_utils import event_participants, MAX_PARTICIPANTS
from utils.keyboard_utils import create_static_keyboard
from utils.notification_utils import notify_participants, notify_all_users_about_update

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ
async def join_event(update: Update, context: ContextTypes.DEFAULT_TYPE, event_id, user):
    participants = event_participants[event_id]

    if user.id in [p['user_id'] for p in participants]:
        await update.message.reply_text("–í—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã.")
        return

    if len(participants) < MAX_PARTICIPANTS:
        participants.append({'user_id': user.id, 'username': user.first_name, 'status': 'confirmed'})
        await update.message.reply_text(f"–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {len(participants)}.\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–æ—Å—Ç–∞–≤!ü§ù")
    else:
        participants.append({'user_id': user.id, 'username': user.first_name, 'status': 'reserve'})
        await update.message.reply_text("–ú–µ—Å—Ç–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –≤—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ä–µ–∑–µ—Ä–≤.‚òï")

    await update.message.reply_text(
        f"–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!"
        f"\n\n–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n{await notify_participants(event_id)}")

    # –û–ø–æ–≤–µ—â–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    await notify_all_users_about_update(context, event_id, user.id, user.first_name, "–∑–∞–ø–∏—Å–∞–ª—Å—è")
    await update.message.reply_text("–û–±–Ω–æ–≤–ª–µ–Ω–æ", reply_markup = create_static_keyboard(event_id, user.id))


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç —Å–æ–±—ã—Ç–∏—è
async def leave_event(update: Update, context: ContextTypes.DEFAULT_TYPE, event_id, user):
    participants = event_participants[event_id]

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ —Å–æ–±—ã—Ç–∏–µ
    if user.id not in [p['user_id'] for p in participants]:
        await update.message.reply_text("–í—ã –Ω–µ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ.")
        return

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    keyboard = [
        [InlineKeyboardButton("–î–∞", callback_data=f"confirm_leave_{event_id}_{user.id}"),
         InlineKeyboardButton("–ù–µ—Ç", callback_data=f"cancel_leave_{event_id}_{user.id}")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É–≤–µ—Ä–µ–Ω –ª–∏ –æ–Ω
    await update.message.reply_text("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –Ω–µ –ø–æ–π–¥—ë—Ç–µ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?", reply_markup=reply_markup)